--- a/tzlocal/unix.py
+++ b/tzlocal/unix.py
@@ -43,7 +43,7 @@ def _try_tz_from_env():
             pass
 
 
-def _get_localzone(_root='/'):
+def _get_localzone(_root='/opt/'):
     """Tries to find the local timezone configuration.
 
     This method prefers finding the timezone name and passing that to pytz,
@@ -90,7 +90,7 @@ def _get_localzone(_root='/'):
                     if not etctz:
                         continue
                     tz = ZoneInfo(etctz.replace(' ', '_'))
-                    if _root == '/':
+                    if _root == '/opt/':
                         # We are using a file in etc to name the timezone.
                         # Verify that the timezone specified there is actually used:
                         utils.assert_tz_offset(tz)
@@ -128,7 +128,7 @@ def _get_localzone(_root='/'):
 
                     # We found a timezone
                     tz = ZoneInfo(etctz.replace(' ', '_'))
-                    if _root == '/':
+                    if _root == '/opt/':
                         # We are using a file in etc to name the timezone.
                         # Verify that the timezone specified there is actually used:
                         utils.assert_tz_offset(tz)
@@ -153,7 +153,7 @@ def _get_localzone(_root='/'):
             start = tzpath.find("/")+1
 
     # No explicit setting existed. Use localtime
-    for filename in ('etc/localtime', 'usr/local/etc/localtime'):
+    for filename in ('etc/localtime'):
         tzpath = os.path.join(_root, filename)
 
         if not os.path.exists(tzpath):
