From 023432fea8c636590e0b49e9af080350e6a32080 Mon Sep 17 00:00:00 2001
From: The-BB <tun.chen.bo@gmail.com>
Date: Thu, 8 Feb 2024 10:10:14 +0300
Subject: [PATCH] lang/python/numpy: fix

---
 lang/python/numpy/Makefile                   | 22 +++++++--
 lang/python/numpy/patches/501-fix-mips.patch | 49 ++++++++++++++++++++
 2 files changed, 66 insertions(+), 5 deletions(-)
 create mode 100644 lang/python/numpy/patches/501-fix-mips.patch

diff --git a/lang/python/numpy/Makefile b/lang/python/numpy/Makefile
index 1e0291a8d..53e56cb0f 100644
--- a/lang/python/numpy/Makefile
+++ b/lang/python/numpy/Makefile
@@ -7,7 +7,7 @@ include $(TOPDIR)/rules.mk
 
 PKG_NAME:=numpy
 PKG_VERSION:=1.26.2
-PKG_RELEASE:=1
+PKG_RELEASE:=1a
 
 PYPI_NAME:=$(PKG_NAME)
 PKG_HASH:=f65738447676ab5777f11e6bbbdb8ce11b785e105f690bc45966574816b6d3ea
@@ -27,6 +27,9 @@ PKG_BUILD_DEPENDS:=python-cython/host pyproject-metadata/host
 PYTHON3_PKG_BUILD_VARS:= \
         $(if $(CONFIG_NUMPY_OPENBLAS_SUPPORT),,NPY_BLAS_ORDER= NPY_LAPACK_ORDER= )
 
+# XXX currently supports only x86_64 AVX-512
+PYTHON3_PKG_BUILD_VARS += NPY_DISABLE_SVML=1
+
 include ../pypi.mk
 include $(INCLUDE_DIR)/package.mk
 include ../python3-package.mk
@@ -37,8 +40,9 @@ define Package/python3-numpy
   CATEGORY:=Languages
   TITLE:=The fundamental package for scientific computing with Python
   URL:=https://www.numpy.org/
-  DEPENDS:=@!SOFT_FLOAT +INSTALL_GFORTRAN:libgfortran +python3 +libstdcpp \
-	   +NUMPY_OPENBLAS_SUPPORT:openblas
+#  DEPENDS:=@!SOFT_FLOAT +INSTALL_GFORTRAN:libgfortran +python3 +libstdcpp \
+#	   +NUMPY_OPENBLAS_SUPPORT:openblas
+  DEPENDS:=+python3 +libstdcpp
 endef
 
 # We need to duplicate the omitted arhitectures same as openblas
@@ -62,8 +66,8 @@ endif
 
 define Build/Prepare/numpy-sitecfg
 	echo "[DEFAULT]"                                 >  $(PKG_BUILD_DIR)/site.cfg
-	echo "library_dirs = $(STAGING_DIR)/usr/lib"     >> $(PKG_BUILD_DIR)/site.cfg
-	echo "include_dirs = $(STAGING_DIR)/usr/include" >> $(PKG_BUILD_DIR)/site.cfg
+	echo "library_dirs = $(STAGING_DIR)/opt/lib"     >> $(PKG_BUILD_DIR)/site.cfg
+	echo "include_dirs = $(STAGING_DIR)/opt/include" >> $(PKG_BUILD_DIR)/site.cfg
 
   ifdef CONFIG_NUMPY_OPENBLAS_SUPPORT
 	echo                                             >> $(PKG_BUILD_DIR)/site.cfg
@@ -86,6 +90,14 @@ For some modules to be available, the INSTALL_GFORTRAN symbol needs
 to be enabled in the OpenWrt core/toolchain.
 endef
 
+define Build/InstallDev
+	$(INSTALL_DIR) $(1)/opt/include/numpy
+	$(CP) $(PKG_BUILD_DIR)/numpy/core/include/numpy/* $(1)/opt/include/numpy
+	$(CP) \
+		$(PKG_BUILD_DIR)/build/src.linux-$(ARCH)-$(PYTHON3_VERSION)/numpy/core/include/numpy/*.h \
+			$(1)/opt/include/numpy
+endef
+
 $(eval $(call Py3Package,python3-numpy))
 $(eval $(call BuildPackage,python3-numpy))
 $(eval $(call BuildPackage,python3-numpy-src))
diff --git a/lang/python/numpy/patches/501-fix-mips.patch b/lang/python/numpy/patches/501-fix-mips.patch
new file mode 100644
index 000000000..8eaa89eb6
--- /dev/null
+++ b/lang/python/numpy/patches/501-fix-mips.patch
@@ -0,0 +1,49 @@
+--- a/numpy/distutils/ccompiler_opt.py
++++ b/numpy/distutils/ccompiler_opt.py
+@@ -192,7 +192,7 @@ class _Config:
+         gcc = dict(
+             # native should always fail on arm and ppc64,
+             # native usually works only with x86
+-            native = '-march=native',
++            native = None,
+             opt = '-O3',
+             werror = '-Werror',
+         ),
+@@ -234,6 +234,8 @@ class _Config:
+         ppc64le = "VSX VSX2",
+         s390x = '',
+         armhf = '', # play it safe
++        mips = '', # mips
++        mipsel = '', # mipsel
+         aarch64 = "NEON NEON_FP16 NEON_VFPV4 ASIMD"
+     )
+     conf_features = dict(
+@@ -976,6 +978,9 @@ class _CCompiler:
+             ("cc_on_armhf",    ".*arm.*", "defined(__ARM_ARCH_7__) || "
+                                           "defined(__ARM_ARCH_7A__)"),
+             ("cc_on_s390x",    ".*s390x.*", ""),
++            # mips(el) platform
++            ("cc_on_mips",	".*mips.*", ""),
++            ("cc_on_mipsel",	".*mips(el|le).*", ""),
+             # undefined platform
+             ("cc_on_noarch",   "", ""),
+         )
+@@ -992,8 +997,7 @@ class _CCompiler:
+         )
+         detect_args = (
+            ("cc_has_debug",  ".*(O0|Od|ggdb|coverage|debug:full).*", ""),
+-           ("cc_has_native",
+-                ".*(-march=native|-xHost|/QxHost|-mcpu=a64fx).*", ""),
++           ("cc_has_native", ".*(-xHost|/QxHost).*", ""),
+            # in case if the class run with -DNPY_DISABLE_OPTIMIZATION
+            ("cc_noopt", ".*DISABLE_OPT.*", ""),
+         )
+@@ -1048,7 +1052,7 @@ class _CCompiler:
+ 
+         self.cc_march = "unknown"
+         for arch in ("x86", "x64", "ppc64", "ppc64le",
+-                     "armhf", "aarch64", "s390x"):
++                     "armhf", "aarch64", "s390x", "mips", "mipsel"):
+             if getattr(self, "cc_on_" + arch):
+                 self.cc_march = arch
+                 break
-- 
2.30.2

